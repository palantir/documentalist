// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypescriptPlugin classes snapshot 1`] = `
Object {
  "Animal": Object {
    "accessors": Array [
      Object {
        "documentation": Object {
          "contents": Array [
            "<p>Get the noise of the animal
Set the noise for the animal</p>
",
          ],
          "contentsRaw": "Get the noise of the animal
Set the noise for the animal",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "getDocumentation": Object {
          "contents": Array [
            "<p>Get the noise of the animal</p>
",
          ],
          "contentsRaw": "Get the noise of the animal",
          "metadata": Object {},
        },
        "kind": "accessor",
        "name": "accessorNoise",
        "setDocumentation": Object {
          "contents": Array [
            "<p>Set the noise for the animal</p>
",
          ],
          "contentsRaw": "Set the noise for the animal",
          "metadata": Object {},
        },
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L20",
        "type": "string",
      },
    ],
    "constructorType": Object {
      "documentation": undefined,
      "fileName": "src/__tests__/__fixtures__/classes.ts",
      "flags": Object {
        "isDeprecated": undefined,
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": true,
        "isRest": false,
        "isStatic": false,
      },
      "inheritedFrom": undefined,
      "kind": "constructor",
      "name": "constructor",
      "signatures": Array [
        Object {
          "documentation": undefined,
          "fileName": "src/__tests__/__fixtures__/classes.ts",
          "flags": undefined,
          "kind": "signature",
          "name": "new Animal",
          "parameters": Array [
            Object {
              "defaultValue": undefined,
              "documentation": undefined,
              "fileName": undefined,
              "flags": Object {
                "isDeprecated": undefined,
                "isExported": false,
                "isExternal": false,
                "isOptional": false,
                "isPrivate": false,
                "isProtected": false,
                "isPublic": false,
                "isRest": false,
                "isStatic": false,
              },
              "kind": "parameter",
              "name": "noise",
              "sourceUrl": undefined,
              "type": "string",
            },
          ],
          "returnType": "Animal",
          "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L27",
          "type": "(noise: string) => Animal",
        },
      ],
      "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L27",
    },
    "documentation": Object {
      "contents": Array [
        "<p>Copyright 2017 Palantir Technologies, Inc. All rights reserved.</p>
<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at</p>
<pre><code><span class=\\"hljs-symbol\\">http:</span>//www.apache<span class=\\"hljs-meta\\">.org</span>/licenses/LICENSE<span class=\\"hljs-number\\">-2.0</span></code></pre><p>Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.</p>
",
      ],
      "contentsRaw": "Copyright 2017 Palantir Technologies, Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the \\"License\\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \\"AS IS\\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.",
      "metadata": Object {},
    },
    "extends": undefined,
    "fileName": "src/__tests__/__fixtures__/classes.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "class",
    "methods": Array [
      Object {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "bark",
        "signatures": Array [
          Object {
            "documentation": Object {
              "contents": Array [
                "<p>Produce a noise.</p>
",
              ],
              "contentsRaw": "Produce a noise.",
              "metadata": Object {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "bark",
            "parameters": Array [],
            "returnType": "string",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L32",
            "type": "() => string",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L32",
      },
      Object {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "eat",
        "signatures": Array [
          Object {
            "documentation": Object {
              "contents": Array [
                "<p>Public method.</p>
",
              ],
              "contentsRaw": "Public method.",
              "metadata": Object {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "eat",
            "parameters": Array [
              Object {
                "defaultValue": undefined,
                "documentation": Object {
                  "contents": Array [
                    "<p>Name of the food to eat.</p>
",
                  ],
                  "contentsRaw": "Name of the food to eat.",
                  "metadata": Object {},
                },
                "fileName": undefined,
                "flags": Object {
                  "isDeprecated": undefined,
                  "isExported": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "food",
                "sourceUrl": undefined,
                "type": "string",
              },
            ],
            "returnType": "void",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L40",
            "type": "(food: string) => void",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L40",
      },
    ],
    "name": "Animal",
    "properties": Array [],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L18",
  },
  "Dog": Object {
    "accessors": Array [
      Object {
        "documentation": Object {
          "contents": Array [
            "<p>Get the noise of the animal
Set the noise for the animal</p>
",
          ],
          "contentsRaw": "Get the noise of the animal
Set the noise for the animal",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "getDocumentation": Object {
          "contents": Array [
            "<p>Get the noise of the animal</p>
",
          ],
          "contentsRaw": "Get the noise of the animal",
          "metadata": Object {},
        },
        "kind": "accessor",
        "name": "accessorNoise",
        "setDocumentation": Object {
          "contents": Array [
            "<p>Set the noise for the animal</p>
",
          ],
          "contentsRaw": "Set the noise for the animal",
          "metadata": Object {},
        },
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L20",
        "type": "string",
      },
    ],
    "constructorType": Object {
      "documentation": undefined,
      "fileName": "src/__tests__/__fixtures__/classes.ts",
      "flags": Object {
        "isDeprecated": undefined,
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": true,
        "isRest": false,
        "isStatic": false,
      },
      "inheritedFrom": undefined,
      "kind": "constructor",
      "name": "constructor",
      "signatures": Array [
        Object {
          "documentation": undefined,
          "fileName": "src/__tests__/__fixtures__/classes.ts",
          "flags": undefined,
          "kind": "signature",
          "name": "new Dog",
          "parameters": Array [],
          "returnType": "Dog",
          "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L52",
          "type": "() => Dog",
        },
      ],
      "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L52",
    },
    "documentation": undefined,
    "extends": Array [
      "Animal",
    ],
    "fileName": "src/__tests__/__fixtures__/classes.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "class",
    "methods": Array [
      Object {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "Animal.bark",
        "kind": "method",
        "name": "bark",
        "signatures": Array [
          Object {
            "documentation": Object {
              "contents": Array [
                "<p>Produce a noise.</p>
",
              ],
              "contentsRaw": "Produce a noise.",
              "metadata": Object {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "bark",
            "parameters": Array [],
            "returnType": "string",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L32",
            "type": "() => string",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L32",
      },
      Object {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "Animal.eat",
        "kind": "method",
        "name": "eat",
        "signatures": Array [
          Object {
            "documentation": Object {
              "contents": Array [
                "<p>Public method.</p>
",
              ],
              "contentsRaw": "Public method.",
              "metadata": Object {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "eat",
            "parameters": Array [
              Object {
                "defaultValue": undefined,
                "documentation": Object {
                  "contents": Array [
                    "<p>Name of the food to eat.</p>
",
                  ],
                  "contentsRaw": "Name of the food to eat.",
                  "metadata": Object {},
                },
                "fileName": undefined,
                "flags": Object {
                  "isDeprecated": undefined,
                  "isExported": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "food",
                "sourceUrl": undefined,
                "type": "string",
              },
            ],
            "returnType": "void",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L40",
            "type": "(food: string) => void",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L40",
      },
    ],
    "name": "Dog",
    "properties": Array [],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L52",
  },
}
`;

exports[`TypescriptPlugin enums snapshot 1`] = `
Object {
  "IconName": Object {
    "documentation": undefined,
    "fileName": "src/__tests__/__fixtures__/enums.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "kind": "type alias",
    "name": "IconName",
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L33",
    "type": "\\"add\\" | \\"remove\\" | \\"plus\\" | \\"minus\\"",
  },
  "Intent": Object {
    "documentation": Object {
      "contents": Array [
        "<p>classic typescript enum</p>
",
      ],
      "contentsRaw": "classic typescript enum",
      "metadata": Object {},
    },
    "fileName": "src/__tests__/__fixtures__/enums.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "kind": "enum",
    "members": Array [
      Object {
        "defaultValue": "\\"danger\\"",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "DANGER",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L22",
      },
      Object {
        "defaultValue": "\\"primary\\"",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "PRIMARY",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L19",
      },
      Object {
        "defaultValue": "\\"success\\"",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "SUCCESS",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L20",
      },
      Object {
        "defaultValue": "\\"warning\\"",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "WARNING",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L21",
      },
    ],
    "name": "Intent",
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L18",
  },
}
`;

exports[`TypescriptPlugin interfaces snapshot 1`] = `
Object {
  "IActionProps": Object {
    "documentation": undefined,
    "extends": undefined,
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "interface",
    "methods": Array [],
    "name": "IActionProps",
    "properties": Array [
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Whether this action is non-interactive.</p>
",
          ],
          "contentsRaw": "Whether this action is non-interactive.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "disabled",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L22",
        "type": "undefined | false | true",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Name of the icon (the part after <code>pt-icon-</code>) to add to the button.</p>
",
          ],
          "contentsRaw": "Name of the icon (the part after \`pt-icon-\`) to add to the button.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "iconName",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L25",
        "type": "IconName",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Click event handler.</p>
",
          ],
          "contentsRaw": "Click event handler.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "onClick",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L28",
        "type": "(event: MouseEvent) => void",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Action text.</p>
",
          ],
          "contentsRaw": "Action text.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "text",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L31",
        "type": "string",
      },
    ],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L20",
  },
  "IButtonProps": Object {
    "documentation": undefined,
    "extends": Array [
      "IActionProps",
    ],
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": Object {
      "documentation": Object {
        "contents": Array [
          "<p>Index signature for the masses.</p>
",
        ],
        "contentsRaw": "Index signature for the masses.",
        "metadata": Object {},
      },
      "fileName": "src/__tests__/__fixtures__/interfaces.ts",
      "flags": undefined,
      "kind": "signature",
      "name": "__index",
      "parameters": Array [
        Object {
          "defaultValue": undefined,
          "documentation": undefined,
          "fileName": undefined,
          "flags": Object {
            "isDeprecated": undefined,
            "isExported": false,
            "isExternal": false,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false,
          },
          "kind": "parameter",
          "name": "x",
          "sourceUrl": undefined,
          "type": "string",
        },
      ],
      "returnType": "any",
      "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L64",
      "type": "{ [x: string]: any }",
    },
    "kind": "interface",
    "methods": Array [],
    "name": "IButtonProps",
    "properties": Array [
      Object {
        "defaultValue": "false",
        "documentation": Object {
          "contents": Array [
            "<p>If set to <code>true</code>, the button will display in an active state.
This is equivalent to setting <code>className=&quot;pt-active&quot;</code>.</p>
",
          ],
          "contentsRaw": "If set to \`true\`, the button will display in an active state.
This is equivalent to setting \`className=\\"pt-active\\"\`.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "active",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L40",
        "type": "undefined | false | true",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Whether this action is non-interactive.</p>
",
          ],
          "contentsRaw": "Whether this action is non-interactive.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.disabled",
        "kind": "property",
        "name": "disabled",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L22",
        "type": "undefined | false | true",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>A ref handler that receives the native HTML element backing this component.</p>
",
          ],
          "contentsRaw": "A ref handler that receives the native HTML element backing this component.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "elementRef",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L43",
        "type": "undefined | (ref: HTMLElement) => any",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Name of the icon (the part after <code>pt-icon-</code>) to add to the button.</p>
",
          ],
          "contentsRaw": "Name of the icon (the part after \`pt-icon-\`) to add to the button.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.iconName",
        "kind": "property",
        "name": "iconName",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L25",
        "type": "IconName",
      },
      Object {
        "defaultValue": "false",
        "documentation": Object {
          "contents": Array [
            "<p>If set to <code>true</code>, the button will display a centered loading spinner instead of its contents.
The width of the button is not affected by the value of this prop.</p>
",
          ],
          "contentsRaw": "If set to \`true\`, the button will display a centered loading spinner instead of its contents.
The width of the button is not affected by the value of this prop.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": true,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "loading",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L57",
        "type": "undefined | false | true",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Click event handler.</p>
",
          ],
          "contentsRaw": "Click event handler.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.onClick",
        "kind": "property",
        "name": "onClick",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L28",
        "type": "(event: MouseEvent) => void",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Name of the icon (the part after <code>pt-icon-</code>) to add to the button.</p>
",
          ],
          "contentsRaw": "Name of the icon (the part after \`pt-icon-\`) to add to the button.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": "since v1.2.3",
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "rightIconName",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L49",
        "type": "IconName",
      },
      Object {
        "defaultValue": undefined,
        "documentation": Object {
          "contents": Array [
            "<p>Action text.</p>
",
          ],
          "contentsRaw": "Action text.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.text",
        "kind": "property",
        "name": "text",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L31",
        "type": "string",
      },
      Object {
        "defaultValue": "\\"button\\"",
        "documentation": Object {
          "contents": Array [
            "<p>HTML <code>type</code> attribute of button. Common values are <code>&quot;button&quot;</code> and <code>&quot;submit&quot;</code>.
Note that this prop has no effect on <code>AnchorButton</code>; it only affects <code>Button</code>.</p>
",
          ],
          "contentsRaw": "HTML \`type\` attribute of button. Common values are \`\\"button\\"\` and \`\\"submit\\"\`.
Note that this prop has no effect on \`AnchorButton\`; it only affects \`Button\`.",
          "metadata": Object {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "type",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L64",
        "type": "undefined | string",
      },
    ],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L34",
  },
  "ICompiler": Object {
    "documentation": Object {
      "contents": Array [
        "<p>Each plugin receives a <code>Compiler</code> instance to aid in the processing of source files.</p>
",
      ],
      "contentsRaw": "Each plugin receives a \`Compiler\` instance to aid in the processing of source files.",
      "metadata": Object {},
    },
    "extends": undefined,
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "interface",
    "methods": Array [
      Object {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "objectify",
        "signatures": Array [
          Object {
            "documentation": Object {
              "contents": Array [
                "<p>Converts an array of entries into a map of key to entry, using given
callback to extract key from each item.</p>
",
              ],
              "contentsRaw": "Converts an array of entries into a map of key to entry, using given
callback to extract key from each item.",
              "metadata": Object {},
            },
            "fileName": "src/__tests__/__fixtures__/interfaces.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "objectify",
            "parameters": Array [
              Object {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": Object {
                  "isDeprecated": undefined,
                  "isExported": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "array",
                "sourceUrl": undefined,
                "type": "T[]",
              },
              Object {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": Object {
                  "isDeprecated": undefined,
                  "isExported": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "getKey",
                "sourceUrl": undefined,
                "type": "(item: T) => string",
              },
            ],
            "returnType": "{ [key: string]: T }",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L78",
            "type": "(array: T[], getKey: (item: T) => string) => { [key: string]: T }",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L78",
      },
      Object {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "renderBlock",
        "signatures": Array [
          Object {
            "documentation": Object {
              "contents": Array [
                "<p>Render a block of content by extracting metadata (YAML front matter) and
splitting text content into markdown-rendered HTML strings and <code>{ tag,
value }</code> objects.</p>
<p>To prevent special strings like &quot;@include&quot; from being parsed, a reserved
tag words array may be provided, in which case the line will be left as
is.</p>
",
              ],
              "contentsRaw": "Render a block of content by extracting metadata (YAML front matter) and
splitting text content into markdown-rendered HTML strings and \`{ tag,
value }\` objects.

To prevent special strings like \\"@include\\" from being parsed, a reserved
tag words array may be provided, in which case the line will be left as
is.",
              "metadata": Object {},
            },
            "fileName": "src/__tests__/__fixtures__/interfaces.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "renderBlock",
            "parameters": Array [
              Object {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": Object {
                  "isDeprecated": undefined,
                  "isExported": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "blockContent",
                "sourceUrl": undefined,
                "type": "string",
              },
              Object {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": Object {
                  "isDeprecated": undefined,
                  "isExported": false,
                  "isExternal": false,
                  "isOptional": true,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "reservedTagWords",
                "sourceUrl": undefined,
                "type": "string[]",
              },
            ],
            "returnType": "object",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L89",
            "type": "(blockContent: string, reservedTagWords?: string[]) => object",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L89",
      },
      Object {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": Object {
          "isDeprecated": undefined,
          "isExported": true,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "renderMarkdown",
        "signatures": Array [
          Object {
            "documentation": Object {
              "contents": Array [
                "<p>Render a string of markdown to HTML, using the options from <code>Documentalist</code>.</p>
",
              ],
              "contentsRaw": "Render a string of markdown to HTML, using the options from \`Documentalist\`.",
              "metadata": Object {},
            },
            "fileName": "src/__tests__/__fixtures__/interfaces.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "renderMarkdown",
            "parameters": Array [
              Object {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": Object {
                  "isDeprecated": undefined,
                  "isExported": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "markdown",
                "sourceUrl": undefined,
                "type": "string",
              },
            ],
            "returnType": "string",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L94",
            "type": "(markdown: string) => string",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L94",
      },
    ],
    "name": "ICompiler",
    "properties": Array [],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L73",
  },
  "IconName": Object {
    "documentation": Object {
      "contents": Array [
        "<p>All icon identifiers</p>
",
      ],
      "contentsRaw": "All icon identifiers",
      "metadata": Object {},
    },
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": Object {
      "isDeprecated": undefined,
      "isExported": true,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "kind": "type alias",
    "name": "IconName",
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L18",
    "type": "\\"add\\" | \\"remove\\" | \\"plus\\" | \\"minus\\"",
  },
}
`;

exports[`TypescriptPlugin options excludeNames 1`] = `
Array [
  "active",
  "disabled",
  "elementRef",
  "loading",
  "onClick",
  "text",
  "type",
]
`;

exports[`TypescriptPlugin options excludePaths 1`] = `Object {}`;

exports[`TypescriptPlugin options includeNonExportedMembers 1`] = `
Array [
  "Animal",
  "Dog",
  "Food",
]
`;

exports[`TypescriptPlugin options includePrivateMembers 1`] = `
Array [
  "bark",
  "consumePrivate",
  "eat",
]
`;
