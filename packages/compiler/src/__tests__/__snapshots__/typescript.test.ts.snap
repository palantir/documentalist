// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypescriptPlugin classes snapshot 1`] = `
{
  "Animal": {
    "accessors": [
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "getDocumentation": {
          "contents": [
            "<p>Get the noise of the animal</p>
",
          ],
          "contentsRaw": "Get the noise of the animal",
          "metadata": {},
        },
        "kind": "accessor",
        "name": "accessorNoise",
        "setDocumentation": {
          "contents": [
            "<p>Set the noise for the animal</p>
",
          ],
          "contentsRaw": "Set the noise for the animal",
          "metadata": {},
        },
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L21",
        "type": "string",
      },
    ],
    "constructorType": {
      "documentation": undefined,
      "fileName": "src/__tests__/__fixtures__/classes.ts",
      "flags": {
        "isDeprecated": false,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": true,
        "isRest": false,
        "isStatic": false,
      },
      "inheritedFrom": undefined,
      "kind": "constructor",
      "name": "constructor",
      "signatures": [
        {
          "documentation": undefined,
          "fileName": "src/__tests__/__fixtures__/classes.ts",
          "flags": undefined,
          "kind": "signature",
          "name": "new Animal",
          "parameters": [
            {
              "defaultValue": undefined,
              "documentation": undefined,
              "fileName": undefined,
              "flags": {
                "isDeprecated": false,
                "isExternal": false,
                "isOptional": false,
                "isPrivate": false,
                "isProtected": false,
                "isPublic": false,
                "isRest": false,
                "isStatic": false,
              },
              "kind": "parameter",
              "name": "noise",
              "sourceUrl": undefined,
              "type": "string",
            },
          ],
          "returnType": "Animal<>",
          "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L30",
          "type": "(noise: string) => Animal<>",
        },
      ],
      "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L30",
    },
    "documentation": undefined,
    "extends": undefined,
    "fileName": "src/__tests__/__fixtures__/classes.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "class",
    "methods": [
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "bark",
        "signatures": [
          {
            "documentation": {
              "contents": [
                "<p>Produce a noise.</p>
",
              ],
              "contentsRaw": "Produce a noise.",
              "metadata": {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "bark",
            "parameters": [],
            "returnType": "string",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L33",
            "type": "() => string",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L33",
      },
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "eat",
        "signatures": [
          {
            "documentation": {
              "contents": [
                "<p>Public method.</p>
",
              ],
              "contentsRaw": "Public method.",
              "metadata": {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "eat",
            "parameters": [
              {
                "defaultValue": undefined,
                "documentation": {
                  "contents": [
                    "<p>Name of the food to eat.</p>
",
                  ],
                  "contentsRaw": "Name of the food to eat.",
                  "metadata": {},
                },
                "fileName": undefined,
                "flags": {
                  "isDeprecated": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "food",
                "sourceUrl": undefined,
                "type": "string",
              },
            ],
            "returnType": "void",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L41",
            "type": "(food: string) => void",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L41",
      },
    ],
    "name": "Animal",
    "properties": [],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L19",
  },
  "Dog": {
    "accessors": [
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "getDocumentation": {
          "contents": [
            "<p>Get the noise of the animal</p>
",
          ],
          "contentsRaw": "Get the noise of the animal",
          "metadata": {},
        },
        "kind": "accessor",
        "name": "accessorNoise",
        "setDocumentation": {
          "contents": [
            "<p>Set the noise for the animal</p>
",
          ],
          "contentsRaw": "Set the noise for the animal",
          "metadata": {},
        },
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L21",
        "type": "string",
      },
    ],
    "constructorType": {
      "documentation": undefined,
      "fileName": "src/__tests__/__fixtures__/classes.ts",
      "flags": {
        "isDeprecated": false,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": true,
        "isRest": false,
        "isStatic": false,
      },
      "inheritedFrom": undefined,
      "kind": "constructor",
      "name": "constructor",
      "signatures": [
        {
          "documentation": undefined,
          "fileName": "src/__tests__/__fixtures__/classes.ts",
          "flags": undefined,
          "kind": "signature",
          "name": "new Dog",
          "parameters": [],
          "returnType": "Dog<>",
          "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L54",
          "type": "() => Dog<>",
        },
      ],
      "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L54",
    },
    "documentation": undefined,
    "extends": [
      "Animal<>",
    ],
    "fileName": "src/__tests__/__fixtures__/classes.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "class",
    "methods": [
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "Animal.bark",
        "kind": "method",
        "name": "bark",
        "signatures": [
          {
            "documentation": {
              "contents": [
                "<p>Produce a noise.</p>
",
              ],
              "contentsRaw": "Produce a noise.",
              "metadata": {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "bark",
            "parameters": [],
            "returnType": "string",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L33",
            "type": "() => string",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L33",
      },
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/classes.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": true,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "Animal.eat",
        "kind": "method",
        "name": "eat",
        "signatures": [
          {
            "documentation": {
              "contents": [
                "<p>Public method.</p>
",
              ],
              "contentsRaw": "Public method.",
              "metadata": {},
            },
            "fileName": "src/__tests__/__fixtures__/classes.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "eat",
            "parameters": [
              {
                "defaultValue": undefined,
                "documentation": {
                  "contents": [
                    "<p>Name of the food to eat.</p>
",
                  ],
                  "contentsRaw": "Name of the food to eat.",
                  "metadata": {},
                },
                "fileName": undefined,
                "flags": {
                  "isDeprecated": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "food",
                "sourceUrl": undefined,
                "type": "string",
              },
            ],
            "returnType": "void",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L41",
            "type": "(food: string) => void",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L41",
      },
    ],
    "name": "Dog",
    "properties": [],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/classes.ts#L53",
  },
}
`;

exports[`TypescriptPlugin enums snapshot 1`] = `
{
  "IconName": {
    "documentation": undefined,
    "fileName": "src/__tests__/__fixtures__/enums.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "kind": "type alias",
    "name": "IconName",
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L26",
    "type": ""add" | "remove" | "plus" | "minus"",
  },
  "Intent": {
    "documentation": {
      "contents": [
        "<p>classic typescript enum</p>
",
      ],
      "contentsRaw": "classic typescript enum",
      "metadata": {},
    },
    "fileName": "src/__tests__/__fixtures__/enums.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "kind": "enum",
    "members": [
      {
        "defaultValue": "danger",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "DANGER",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L22",
      },
      {
        "defaultValue": "primary",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "PRIMARY",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L19",
      },
      {
        "defaultValue": "success",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "SUCCESS",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L20",
      },
      {
        "defaultValue": "warning",
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/enums.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "kind": "enum member",
        "name": "WARNING",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L21",
      },
    ],
    "name": "Intent",
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/enums.ts#L18",
  },
}
`;

exports[`TypescriptPlugin functions snapshot 1`] = `
{
  "MyFunc": {
    "documentation": undefined,
    "fileName": "src/__tests__/__fixtures__/functions.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "inheritedFrom": undefined,
    "kind": "method",
    "name": "MyFunc",
    "signatures": [
      {
        "documentation": {
          "contents": [
            "<p>Non-exported function.</p>
",
          ],
          "contentsRaw": "Non-exported function.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/functions.ts",
        "flags": undefined,
        "kind": "signature",
        "name": "MyFunc",
        "parameters": [
          {
            "defaultValue": undefined,
            "documentation": {
              "contents": [
                "<p>The string parameter.</p>
",
              ],
              "contentsRaw": "The string parameter.",
              "metadata": {},
            },
            "fileName": undefined,
            "flags": {
              "isDeprecated": false,
              "isExternal": false,
              "isOptional": false,
              "isPrivate": false,
              "isProtected": false,
              "isPublic": false,
              "isRest": false,
              "isStatic": false,
            },
            "kind": "parameter",
            "name": "str",
            "sourceUrl": undefined,
            "type": "string",
          },
          {
            "defaultValue": undefined,
            "documentation": {
              "contents": [
                "<p>The boolean parameter.</p>
",
              ],
              "contentsRaw": "The boolean parameter.",
              "metadata": {},
            },
            "fileName": undefined,
            "flags": {
              "isDeprecated": false,
              "isExternal": false,
              "isOptional": false,
              "isPrivate": false,
              "isProtected": false,
              "isPublic": false,
              "isRest": false,
              "isStatic": false,
            },
            "kind": "parameter",
            "name": "bool",
            "sourceUrl": undefined,
            "type": "boolean",
          },
        ],
        "returnType": "string",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/functions.ts#L31",
        "type": "(str: string, bool: boolean) => string",
      },
    ],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/functions.ts#L36",
  },
  "numberAndString": {
    "documentation": undefined,
    "fileName": "src/__tests__/__fixtures__/functions.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "inheritedFrom": undefined,
    "kind": "method",
    "name": "numberAndString",
    "signatures": [
      {
        "documentation": {
          "contents": [
            "<p>Exported function.</p>
",
          ],
          "contentsRaw": "Exported function.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/functions.ts",
        "flags": undefined,
        "kind": "signature",
        "name": "numberAndString",
        "parameters": [
          {
            "defaultValue": undefined,
            "documentation": {
              "contents": [
                "<p>The number passed to the function.</p>
",
              ],
              "contentsRaw": "The number passed to the function.",
              "metadata": {},
            },
            "fileName": undefined,
            "flags": {
              "isDeprecated": false,
              "isExternal": false,
              "isOptional": false,
              "isPrivate": false,
              "isProtected": false,
              "isPublic": false,
              "isRest": false,
              "isStatic": false,
            },
            "kind": "parameter",
            "name": "first",
            "sourceUrl": undefined,
            "type": "number",
          },
          {
            "defaultValue": undefined,
            "documentation": {
              "contents": [
                "<p>The string passed to the function.</p>
",
              ],
              "contentsRaw": "The string passed to the function.",
              "metadata": {},
            },
            "fileName": undefined,
            "flags": {
              "isDeprecated": false,
              "isExternal": false,
              "isOptional": false,
              "isPrivate": false,
              "isProtected": false,
              "isPublic": false,
              "isRest": false,
              "isStatic": false,
            },
            "kind": "parameter",
            "name": "second",
            "sourceUrl": undefined,
            "type": "string",
          },
        ],
        "returnType": "string",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/functions.ts#L22",
        "type": "(first: number, second: string) => string",
      },
    ],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/functions.ts#L22",
  },
}
`;

exports[`TypescriptPlugin interfaces snapshot 1`] = `
{
  "IActionProps": {
    "documentation": undefined,
    "extends": undefined,
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "interface",
    "methods": [],
    "name": "IActionProps",
    "properties": [
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Whether this action is non-interactive.</p>
",
          ],
          "contentsRaw": "Whether this action is non-interactive.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "disabled",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L22",
        "type": "boolean",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Name of the icon (the part after 
<code>pt-icon-</code>
) to add to the button.</p>
",
          ],
          "contentsRaw": "Name of the icon (the part after 
\`pt-icon-\`
) to add to the button.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "iconName",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L25",
        "type": "IconName",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Click event handler.</p>
",
          ],
          "contentsRaw": "Click event handler.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "onClick",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L28",
        "type": "(event: MouseEvent<>) => void",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Action text.</p>
",
          ],
          "contentsRaw": "Action text.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "text",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L31",
        "type": "string",
      },
    ],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L20",
  },
  "IButtonProps": {
    "documentation": undefined,
    "extends": [
      "IActionProps<>",
    ],
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": {
      "documentation": undefined,
      "fileName": "src/__tests__/__fixtures__/interfaces.ts",
      "flags": undefined,
      "kind": "signature",
      "name": "__index",
      "parameters": [
        {
          "defaultValue": undefined,
          "documentation": undefined,
          "fileName": undefined,
          "flags": {
            "isDeprecated": false,
            "isExternal": false,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false,
          },
          "kind": "parameter",
          "name": "x",
          "sourceUrl": undefined,
          "type": "string",
        },
      ],
      "returnType": "any",
      "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L67",
      "type": "{ [x: string]: any }",
    },
    "kind": "interface",
    "methods": [],
    "name": "IButtonProps",
    "properties": [
      {
        "defaultValue": "\`\`\`ts
false
\`\`\`",
        "documentation": {
          "contents": [
            "<p>If set to 
<code>true</code>
, the button will display in an active state.
This is equivalent to setting 
<code>className=&quot;pt-active&quot;</code>
.</p>
",
          ],
          "contentsRaw": "If set to 
\`true\`
, the button will display in an active state.
This is equivalent to setting 
\`className="pt-active"\`
.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "active",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L40",
        "type": "boolean",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Whether this action is non-interactive.</p>
",
          ],
          "contentsRaw": "Whether this action is non-interactive.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.disabled",
        "kind": "property",
        "name": "disabled",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L22",
        "type": "boolean",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>A ref handler that receives the native HTML element backing this component.</p>
",
          ],
          "contentsRaw": "A ref handler that receives the native HTML element backing this component.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "elementRef",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L43",
        "type": "(ref: HTMLElement<>) => any",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Name of the icon (the part after 
<code>pt-icon-</code>
) to add to the button.</p>
",
          ],
          "contentsRaw": "Name of the icon (the part after 
\`pt-icon-\`
) to add to the button.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.iconName",
        "kind": "property",
        "name": "iconName",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L25",
        "type": "IconName",
      },
      {
        "defaultValue": "\`\`\`ts
false
\`\`\`",
        "documentation": {
          "contents": [
            "<p>If set to 
<code>true</code>
, the button will display a centered loading spinner instead of its contents.
The width of the button is not affected by the value of this prop.</p>
",
          ],
          "contentsRaw": "If set to 
\`true\`
, the button will display a centered loading spinner instead of its contents.
The width of the button is not affected by the value of this prop.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "loading",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L57",
        "type": "boolean",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Click event handler.</p>
",
          ],
          "contentsRaw": "Click event handler.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.onClick",
        "kind": "property",
        "name": "onClick",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L28",
        "type": "(event: MouseEvent<>) => void",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Name of the icon (the part after 
<code>pt-icon-</code>
) to add to the button.</p>
",
          ],
          "contentsRaw": "Name of the icon (the part after 
\`pt-icon-\`
) to add to the button.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": true,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "rightIconName",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L49",
        "type": "IconName",
      },
      {
        "defaultValue": undefined,
        "documentation": {
          "contents": [
            "<p>Action text.</p>
",
          ],
          "contentsRaw": "Action text.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": "IActionProps.text",
        "kind": "property",
        "name": "text",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L31",
        "type": "string",
      },
      {
        "defaultValue": "\`\`\`ts
"button"
\`\`\`",
        "documentation": {
          "contents": [
            "<p>HTML 
<code>type</code>
 attribute of button. Common values are 
<code>&quot;button&quot;</code>
 and 
<code>&quot;submit&quot;</code>
.
Note that this prop has no effect on 
<code>AnchorButton</code>
; it only affects 
<code>Button</code>
.</p>
",
          ],
          "contentsRaw": "HTML 
\`type\`
 attribute of button. Common values are 
\`"button"\`
 and 
\`"submit"\`
.
Note that this prop has no effect on 
\`AnchorButton\`
; it only affects 
\`Button\`
.",
          "metadata": {},
        },
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": true,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "property",
        "name": "type",
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L64",
        "type": "string",
      },
    ],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L34",
  },
  "ICompiler": {
    "documentation": {
      "contents": [
        "<p>Each plugin receives a 
<code>Compiler</code>
 instance to aid in the processing of source files.</p>
",
      ],
      "contentsRaw": "Each plugin receives a 
\`Compiler\`
 instance to aid in the processing of source files.",
      "metadata": {},
    },
    "extends": undefined,
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "implements": undefined,
    "indexSignature": undefined,
    "kind": "interface",
    "methods": [
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "objectify",
        "signatures": [
          {
            "documentation": {
              "contents": [
                "<p>Converts an array of entries into a map of key to entry, using given
callback to extract key from each item.</p>
",
              ],
              "contentsRaw": "Converts an array of entries into a map of key to entry, using given
callback to extract key from each item.",
              "metadata": {},
            },
            "fileName": "src/__tests__/__fixtures__/interfaces.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "objectify",
            "parameters": [
              {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": {
                  "isDeprecated": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "array",
                "sourceUrl": undefined,
                "type": "T[]",
              },
              {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": {
                  "isDeprecated": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "getKey",
                "sourceUrl": undefined,
                "type": "(item: T) => string",
              },
            ],
            "returnType": "{ [key: string]: T }",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L78",
            "type": "(array: T[], getKey: (item: T) => string) => { [key: string]: T }",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L78",
      },
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "renderBlock",
        "signatures": [
          {
            "documentation": {
              "contents": [
                "<p>Render a block of content by extracting metadata (YAML front matter) and
splitting text content into markdown-rendered HTML strings and 
<code>{ tag, value }</code>
 objects.</p>
<p>To prevent special strings like &quot;@include&quot; from being parsed, a reserved
tag words array may be provided, in which case the line will be left as
is.</p>
",
              ],
              "contentsRaw": "Render a block of content by extracting metadata (YAML front matter) and
splitting text content into markdown-rendered HTML strings and 
\`{ tag,
value }\`
 objects.

To prevent special strings like "@include" from being parsed, a reserved
tag words array may be provided, in which case the line will be left as
is.",
              "metadata": {},
            },
            "fileName": "src/__tests__/__fixtures__/interfaces.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "renderBlock",
            "parameters": [
              {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": {
                  "isDeprecated": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "blockContent",
                "sourceUrl": undefined,
                "type": "string",
              },
              {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": {
                  "isDeprecated": false,
                  "isExternal": false,
                  "isOptional": true,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "reservedTagWords",
                "sourceUrl": undefined,
                "type": "string[]",
              },
            ],
            "returnType": "object",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L89",
            "type": "(blockContent: string, reservedTagWords?: string[]) => object",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L89",
      },
      {
        "documentation": undefined,
        "fileName": "src/__tests__/__fixtures__/interfaces.ts",
        "flags": {
          "isDeprecated": false,
          "isExternal": false,
          "isOptional": false,
          "isPrivate": false,
          "isProtected": false,
          "isPublic": false,
          "isRest": false,
          "isStatic": false,
        },
        "inheritedFrom": undefined,
        "kind": "method",
        "name": "renderMarkdown",
        "signatures": [
          {
            "documentation": {
              "contents": [
                "<p>Render a string of markdown to HTML, using the options from 
<code>Documentalist</code>
.</p>
",
              ],
              "contentsRaw": "Render a string of markdown to HTML, using the options from 
\`Documentalist\`
.",
              "metadata": {},
            },
            "fileName": "src/__tests__/__fixtures__/interfaces.ts",
            "flags": undefined,
            "kind": "signature",
            "name": "renderMarkdown",
            "parameters": [
              {
                "defaultValue": undefined,
                "documentation": undefined,
                "fileName": undefined,
                "flags": {
                  "isDeprecated": false,
                  "isExternal": false,
                  "isOptional": false,
                  "isPrivate": false,
                  "isProtected": false,
                  "isPublic": false,
                  "isRest": false,
                  "isStatic": false,
                },
                "kind": "parameter",
                "name": "markdown",
                "sourceUrl": undefined,
                "type": "string",
              },
            ],
            "returnType": "string",
            "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L94",
            "type": "(markdown: string) => string",
          },
        ],
        "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L94",
      },
    ],
    "name": "ICompiler",
    "properties": [],
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L73",
  },
  "IconName": {
    "documentation": {
      "contents": [
        "<p>All icon identifiers</p>
",
      ],
      "contentsRaw": "All icon identifiers",
      "metadata": {},
    },
    "fileName": "src/__tests__/__fixtures__/interfaces.ts",
    "flags": {
      "isDeprecated": false,
      "isExternal": false,
      "isOptional": false,
      "isPrivate": false,
      "isProtected": false,
      "isPublic": false,
      "isRest": false,
      "isStatic": false,
    },
    "kind": "type alias",
    "name": "IconName",
    "sourceUrl": "https://github.com/palantir/documentalist/blob/develop/packages/compiler/src/__tests__/__fixtures__/interfaces.ts#L18",
    "type": ""add" | "remove" | "plus" | "minus"",
  },
}
`;

exports[`TypescriptPlugin options excludeNames 1`] = `
[
  "active",
  "disabled",
  "elementRef",
  "loading",
  "onClick",
  "text",
  "type",
]
`;

exports[`TypescriptPlugin options excludePaths 1`] = `{}`;

exports[`TypescriptPlugin options includePrivateMembers 1`] = `
[
  "bark",
  "consumePrivate",
  "eat",
]
`;
